[0.000000] (-) TimerEvent: {}
[0.001692] (all_sensors_launch) JobQueued: {'identifier': 'all_sensors_launch', 'dependencies': OrderedDict()}
[0.003611] (all_sensors_launch) JobStarted: {'identifier': 'all_sensors_launch'}
[0.032429] (all_sensors_launch) JobProgress: {'identifier': 'all_sensors_launch', 'progress': 'cmake'}
[0.033599] (all_sensors_launch) Command: {'cmd': ['/usr/bin/cmake', '/all_sensors_launch', '-DCMAKE_INSTALL_PREFIX=/all_sensors_launch/install/all_sensors_launch'], 'cwd': '/all_sensors_launch/build/all_sensors_launch', 'env': OrderedDict([('TMUX', '/tmp/tmux-0/default,81,0'), ('HOSTNAME', 'ubuntu'), ('SHLVL', '2'), ('HOME', '/root'), ('OLDPWD', '/'), ('TERM_PROGRAM_VERSION', '3.2a'), ('ROS_DISTRO', 'humble'), ('_', '/usr/bin/colcon'), ('TERM', 'screen'), ('PATH', '/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'), ('DISPLAY', ':1'), ('LANG', 'C.UTF-8'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('TERM_PROGRAM', 'tmux'), ('SHELL', '/bin/bash'), ('PWD', '/all_sensors_launch/build/all_sensors_launch'), ('LC_ALL', 'C.UTF-8'), ('COLCON', '1'), ('TMUX_PANE', '%0')]), 'shell': False}
[0.098929] (-) TimerEvent: {}
[0.199813] (-) TimerEvent: {}
[0.300857] (-) TimerEvent: {}
[0.306338] (all_sensors_launch) StdoutLine: {'line': b'-- The C compiler identification is GNU 11.4.0\n'}
[0.401183] (-) TimerEvent: {}
[0.502950] (-) TimerEvent: {}
[0.546893] (all_sensors_launch) StdoutLine: {'line': b'-- The CXX compiler identification is GNU 11.4.0\n'}
[0.576461] (all_sensors_launch) StdoutLine: {'line': b'-- Detecting C compiler ABI info\n'}
[0.603287] (-) TimerEvent: {}
[0.705534] (-) TimerEvent: {}
[0.806778] (-) TimerEvent: {}
[0.861692] (all_sensors_launch) StdoutLine: {'line': b'-- Detecting C compiler ABI info - done\n'}
[0.899567] (all_sensors_launch) StdoutLine: {'line': b'-- Check for working C compiler: /usr/bin/cc - skipped\n'}
[0.900653] (all_sensors_launch) StdoutLine: {'line': b'-- Detecting C compile features\n'}
[0.902652] (all_sensors_launch) StdoutLine: {'line': b'-- Detecting C compile features - done\n'}
[0.906853] (-) TimerEvent: {}
[0.916651] (all_sensors_launch) StdoutLine: {'line': b'-- Detecting CXX compiler ABI info\n'}
[1.007124] (-) TimerEvent: {}
[1.108112] (-) TimerEvent: {}
[1.210348] (-) TimerEvent: {}
[1.244845] (all_sensors_launch) StdoutLine: {'line': b'-- Detecting CXX compiler ABI info - done\n'}
[1.281644] (all_sensors_launch) StdoutLine: {'line': b'-- Check for working CXX compiler: /usr/bin/c++ - skipped\n'}
[1.282716] (all_sensors_launch) StdoutLine: {'line': b'-- Detecting CXX compile features\n'}
[1.284651] (all_sensors_launch) StdoutLine: {'line': b'-- Detecting CXX compile features - done\n'}
[1.310628] (-) TimerEvent: {}
[1.313567] (all_sensors_launch) StderrLine: {'line': b'\x1b[31mCMake Error at CMakeLists.txt:9 (find_package):\n'}
[1.314600] (all_sensors_launch) StderrLine: {'line': b'  By not providing "Findament_cmake.cmake" in CMAKE_MODULE_PATH this project\n'}
[1.314977] (all_sensors_launch) StderrLine: {'line': b'  has asked CMake to find a package configuration file provided by\n'}
[1.315373] (all_sensors_launch) StderrLine: {'line': b'  "ament_cmake", but CMake did not find one.\n'}
[1.315691] (all_sensors_launch) StderrLine: {'line': b'\n'}
[1.316013] (all_sensors_launch) StderrLine: {'line': b'  Could not find a package configuration file provided by "ament_cmake" with\n'}
[1.316326] (all_sensors_launch) StderrLine: {'line': b'  any of the following names:\n'}
[1.316587] (all_sensors_launch) StderrLine: {'line': b'\n'}
[1.316928] (all_sensors_launch) StderrLine: {'line': b'    ament_cmakeConfig.cmake\n'}
[1.317216] (all_sensors_launch) StderrLine: {'line': b'    ament_cmake-config.cmake\n'}
[1.317504] (all_sensors_launch) StderrLine: {'line': b'\n'}
[1.317825] (all_sensors_launch) StderrLine: {'line': b'  Add the installation prefix of "ament_cmake" to CMAKE_PREFIX_PATH or set\n'}
[1.318108] (all_sensors_launch) StderrLine: {'line': b'  "ament_cmake_DIR" to a directory containing one of the above files.  If\n'}
[1.318492] (all_sensors_launch) StderrLine: {'line': b'  "ament_cmake" provides a separate development package or SDK, be sure it\n'}
[1.318859] (all_sensors_launch) StderrLine: {'line': b'  has been installed.\n'}
[1.319130] (all_sensors_launch) StderrLine: {'line': b'\n'}
[1.319458] (all_sensors_launch) StderrLine: {'line': b'\x1b[0m\n'}
[1.319763] (all_sensors_launch) StdoutLine: {'line': b'-- Configuring incomplete, errors occurred!\n'}
[1.320045] (all_sensors_launch) StdoutLine: {'line': b'See also "/all_sensors_launch/build/all_sensors_launch/CMakeFiles/CMakeOutput.log".\n'}
[1.331265] (all_sensors_launch) CommandEnded: {'returncode': 1}
[1.413229] (-) TimerEvent: {}
[1.431692] (all_sensors_launch) JobEnded: {'identifier': 'all_sensors_launch', 'rc': 1}
[1.443624] (-) EventReactorShutdown: {}
